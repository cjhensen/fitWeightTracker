angular.module("ag-app",["firebase","ui.router","templatesCache","angular-md5"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("login",{url:"/",controller:"AuthCtrl as authCtrl",templateUrl:"login.html",resolve:{requireNoAuth:["$state","Auth",function(t,e){return e.$requireAuth().then(function(e){t.go("dashboard")},function(t){})}]}}).state("register",{url:"/register",controller:"AuthCtrl as authCtrl",templateUrl:"register.html",resolve:{requireNoAuth:["$state","Auth",function(t,e){return e.$requireAuth().then(function(e){t.go("login")},function(t){})}]}}).state("dashboard",{url:"/dashboard",controller:"DashboardCtrl as dashboardCtrl",templateUrl:"dashboard.html",resolve:{auth:["$state","Users","Auth",function(t,e,r){return r.$requireAuth()["catch"](function(){t.go("login")})}],dashboard:["Logs","Auth",function(t,e){return e.$requireAuth().then(function(e){return t.getLogs(e.uid).$loaded()})}]}}).state("profile",{url:"/profile",controller:"ProfileCtrl as profileCtrl",templateUrl:"profile.html",resolve:{auth:["$state","Users","Auth",function(t,e,r){return r.$requireAuth()["catch"](function(){t.go("login")})}],profile:["Users","Auth",function(t,e){return e.$requireAuth().then(function(e){return t.getProfile(e.uid).$loaded()})}]}}),e.otherwise("/")}]).constant("FirebaseUrl","https://ag-app.firebaseio.com/"),angular.module("ag-app").controller("AuthCtrl",["Auth","$state",function(t,e){var r=this;r.user={email:"",password:""},r.login=function(){t.$authWithPassword(r.user).then(function(t){e.go("dashboard")},function(t){r.error=t})},r.register=function(){t.$createUser(r.user).then(function(t){r.login()},function(t){r.error=t})},r.logout=function(){t.$unauth(),e.go("login")}}]),angular.module("ag-app").controller("DashboardCtrl",["$state","auth","Logs","dashboard","CurDate",function(t,e,r,a,o){var n=this;n.dashboard=a,n.testDCtrl=function(){console.log("From Logs Service: ",r.getWeight(e.uid).val().weight)},n.addLog=function(){n.dashboard.$save().then(function(){n.dashboard.weight="",console.log("date",n.dashboard.date)})}}]),angular.module("ag-app").controller("ProfileCtrl",["$state","md5","auth","profile",function(t,e,r,a){var o=this;o.profile=a,o.updateProfile=function(){o.profile.emailHash=e.createHash(r.password.email),o.profile.$save()}}]),angular.module("ag-app").directive("logout",function(){return{restrict:"E",replace:"true",templateUrl:"logout.html",controller:"AuthCtrl as authCtrl"}}),angular.module("ag-app").factory("Auth",["$firebaseAuth","FirebaseUrl",function(t,e){var r=new Firebase(e),a=t(r);return a}]),angular.module("ag-app").factory("CurDate",["$filter",function(t){var e={getCurDate:function(){var t=new Date,e=("0"+t.getDate()).slice(-2),r=("0"+(t.getMonth()+1)).slice(-2),a=t.getFullYear()+"-"+r+"-"+e;return a}};return e}]),angular.module("ag-app").factory("Logs",["$firebaseArray","$firebaseObject","FirebaseUrl","CurDate",function(t,e,r,a){var o=new Firebase(r+"logs"),n=t(o),u={getLogs:function(t){return e(o.child(t).child(a.getCurDate()))},getWeight:function(t){var e;return o.child(t).once("value",function(t){e=t}),e},setWeight:function(t,e,r){o.child(t).child(e).set({date:e,weight:r},function(t){null!==t&&alert("Unable to push log to Firebase!")})},all:n};return u}]),angular.module("ag-app").factory("Users",["$firebaseArray","$firebaseObject","FirebaseUrl",function(t,e,r){var a=new Firebase(r+"users"),o=t(a),n={getProfile:function(t){return e(a.child(t))},getDisplayName:function(t){return o.$getRecord(t).displayName},getGravatar:function(t){return"//www.gravatar.com/avatar/"+o.$getRecord(t).emailHash},all:o};return n}]);
//# sourceMappingURL=data:application/json;base64,
